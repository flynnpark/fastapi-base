[tool.poetry]
authors = ["Flynn <wphestiraid@gmail.com>"]
description = "FastAPI base project."
license = "MIT"
name = "fast-api-base"
packages = [{include = "app"}]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
fastapi = {extras = ["all"], version = "^0.109.0"}
inject = "^5.2.0"
python = "~3.11"
sqlmodel = "^0.0.14"

[tool.poetry.group.dev.dependencies]
black = "~23.12.1"
pre-commit = "^3.6.0"
pyright = "^1.1.348"
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"
ruff = "~0.1.14"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.black]
include = '\.pyi?$'
preview = true
skip-string-normalization = true
target-version = ['py311']

[tool.ruff]
ignore = [
  "E501", # line too long, handled by black
  "E711", # Comparison to None should be cond is None
  "E712", # Comparison to True should be cond is True or if cond:
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
  "PLR0913", # too many arguments to function call
]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
  "UP", # pyupgrade
  "PL", # pylint
]
target-version = "py311"

[tool.pyright]
reportGeneralTypeIssues = false
venv = ".venv"
venvPath = "."
